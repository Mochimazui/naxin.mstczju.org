.block
  h3 class="#{@form.gender_sym}" = @form.name
  - if @form.spam
    span 此报名表已被鉴定为灌水而可以忽略
  - else
    = draw_tags @form.groups.sort, false
    = splitter
    = draw_tags @form.state.sort, false
    = splitter
    = draw_tags [@form.campus_sym]
    = splitter
    = @form.major
    = splitter
    = @form.tel
    = splitter
    = link_to @form.email, "mailto:#{@form.email}"
    = splitter
    - if @form.forum_id.present?
      = link_to @form.forum_id.to_s, "http://www.cc98.org/dispuser.asp?name=#{@form.forum_id}", target: '_blank'
      = splitter
    = l @form.created_at
    - @form.user_agent.presence.try do |ua|
      = splitter
      - agent = UserAgent.parse(ua)
      span title="#{ua}" = "#{agent.browser} #{agent.version} @ #{agent.platform}"

    - { '' => @form.q1, '报名原因' => @form.q2, '喜欢软件/生活设想/活动形式' => @form.q3, '其他' => @form.q4, '注释' => @form.comments }.each do |k, v| 
      - if v.present?
        = k
        pre.wrap = v


.block
  - form_next = Form.nospam.where('ID < ?', [@form.id]).order('ID DESC').first
  - if form_next
    = link_to "下一个: #{form_next.name}", admin_form_path(form_next), class: 'rfloat'
  - form_prev = Form.nospam.where('ID > ?', [@form.id]).order('ID ASC').first
  - if form_prev
    = link_to "上一个: #{form_prev.name}", admin_form_path(form_prev)
  - else
    p 

br

- if not @form.spam
  .form.panel
    h3 修改状态
    .panel_contents
      table
        tbody
          - @form.groups.each do |g|
            tr
              td = g.upcase
              - Form::STATES.each do |st|
                td
                  /.action.input_action style='display: inline'
                  - html_opt = {} 
                  - if @form.state.include? "#{g}_#{st}".downcase.to_sym
                    - html_opt = { :class => 'disabled', :disabled => 'disabled' }
                  = button_to st.upcase, {:controller => 'admin/forms', :action => "#{g}_#{st}".downcase}, html_opt
    / History
    - if  @form.admin_comments(:state).limit(1).count > 0
      .panel_contents
        table
          thead
            tr
              th WHO
              th WHAT
              th WHEN
          tbody
          - @form.admin_comments(:state).order('id DESC').each do |c|
            tr
              td = c.author.name
              td = c.body
              td = l c.created_at
